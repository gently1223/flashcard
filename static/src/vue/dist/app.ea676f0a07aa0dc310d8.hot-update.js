webpackHotUpdate("app",{

/***/ "./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./src/views/profile.vue?vue&type=script&lang=js&":
/*!***********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js??ref--13-0!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--1-0!./node_modules/vue-loader/lib??vue-loader-options!./src/views/profile.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var vue_numeric_input__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue-numeric-input */ \"./node_modules/vue-numeric-input/dist/vue-numeric-input.umd.js\");\n/* harmony import */ var vue_numeric_input__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vue_numeric_input__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var vue_hover_zoom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vue-hover-zoom */ \"./node_modules/vue-hover-zoom/dist/vue-hover-zoom.common.js\");\n/* harmony import */ var vue_hover_zoom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vue_hover_zoom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.esm.js\");\n/* harmony import */ var vue_toast_notification__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vue-toast-notification */ \"./node_modules/vue-toast-notification/dist/index.min.js\");\n/* harmony import */ var vue_toast_notification__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(vue_toast_notification__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var vue_toast_notification_dist_theme_sugar_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vue-toast-notification/dist/theme-sugar.css */ \"./node_modules/vue-toast-notification/dist/theme-sugar.css\");\n/* harmony import */ var vue_toast_notification_dist_theme_sugar_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(vue_toast_notification_dist_theme_sugar_css__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var vue_session__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vue-session */ \"./node_modules/vue-session/index.js\");\n/* harmony import */ var vue_session__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(vue_session__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n\n\n\nvue__WEBPACK_IMPORTED_MODULE_3__[\"default\"].use(vue_session__WEBPACK_IMPORTED_MODULE_6___default.a);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  components: {\n    VueNumericInput: (vue_numeric_input__WEBPACK_IMPORTED_MODULE_0___default()),\n    VueHoverZoom: (vue_hover_zoom__WEBPACK_IMPORTED_MODULE_1___default())\n  },\n  data: () => ({\n    imgAnswerURL: 'OM1-1.jpeg',\n    // imgURL: 'https://picsum.photos/id/1005/600/200',\n    temp: \"\",\n    imgURL: 'OM1-1.jpeg',\n    showModal: false,\n    showTreeviewModal: false,\n    showSettingsModal: false,\n    selectedItem: 0,\n    not_difficult_value: 1,\n    easy_value: 1,\n    mistake_value: 1,\n    difficult_value: 1,\n    number_exercises_value: 1,\n    uptodown_items: ['History'],\n    level: [\"1 days\", \"4 weeks\", \"4 hours\", \"1 hours\"],\n    not_difficult_value_combo: ['weeks'],\n    not_difficult_value_items: ['weeks', 'days', 'hours', 'minutes'],\n    easy_value_combo: ['weeks'],\n    easy_value_items: ['weeks', 'days', 'hours', 'minutes'],\n    mistake_value_combo: ['weeks'],\n    mistake_value_items: ['weeks', 'days', 'hours', 'minutes'],\n    difficult_value_combo: ['weeks'],\n    difficult_value_items: ['weeks', 'days', 'hours', 'minutes'],\n    points_value: 34,\n    mon: false,\n    tue: false,\n    wen: false,\n    thu: false,\n    fri: false,\n    sat: false,\n    sun: false,\n    items: [],\n    files: [],\n    rows: [],\n    allrows: [],\n    treeview_id: [],\n    username: \"\",\n    date: \"2022-05-20\",\n    menu: false,\n    modal: false,\n    menu2: false,\n    setting_id: 1,\n    setting_form: [],\n    uuid_rows: [],\n    title_rows: [],\n    book_uuid: \"\",\n    book_title: \"\",\n    page_list: []\n  }),\n  computed: {\n    formData: {\n      get: function () {\n        return this.$store.getters[\"authPageModule/getFormData\"];\n      }\n    },\n\n    name() {\n      if (!this.formData.username) return \"FLASH CARD\";else return \"FLASH CARD\";\n    }\n\n  },\n\n  async created() {\n    this.username = this.$session.get('username');\n    vue__WEBPACK_IMPORTED_MODULE_3__[\"default\"].$toast.open('Please wait until loading page..');\n    axios__WEBPACK_IMPORTED_MODULE_2___default.a.get('http://localhost:8000/api/question_book/').then(response => {\n      for (var i = 0; i < response.data.length; i++) {\n        this.items.push({\n          text: response.data[i].file_name,\n          icon: 'mdi-book'\n        });\n        this.uuid_rows.push(response.data[i].uuid);\n        this.allrows.push(response.data[i].contents);\n        this.title_rows.push(response.data[i].file_name);\n      }\n    });\n    axios__WEBPACK_IMPORTED_MODULE_2___default.a.get('http://localhost:8000/api/setting/?user_id=' + this.username).then(response => {\n      this.setting_form.push(response.data[0]);\n      this.setting_id = response.data[0].id;\n      this.points_value = response.data[0].data.reward.point;\n      this.mon = response.data[0].data.plan.monday;\n      this.tue = response.data[0].data.plan.tuesday;\n      this.wen = response.data[0].data.plan.wednesday;\n      this.thu = response.data[0].data.plan.thursday;\n      this.fri = response.data[0].data.plan.friday;\n      this.sat = response.data[0].data.plan.saturday;\n      this.sun = response.data[0].data.plan.sunday;\n      this.difficult_value_combo = response.data[0].data.period.difficult_unit;\n      this.mistake_value_combo = response.data[0].data.period.miss_unit;\n      this.easy_value_combo = response.data[0].data.period.easy_unit;\n      this.not_difficult_value_combo = response.data[0].data.period.standard_unit;\n      this.not_difficult_value = response.data[0].data.period.standard_num;\n      this.easy_value = response.data[0].data.period.easy_num;\n      this.mistake_value = response.data[0].data.period.miss_num;\n      this.difficult_value = response.data[0].data.period.difficult_num;\n      this.date = response.data[0].data.plan.start;\n    });\n  },\n\n  methods: {\n    onOpen(e) {\n      if (!this.__initial) {\n        this.__initial = true;\n        return;\n      }\n    },\n\n    onSelected(e) {\n      console.log('checkbox clicked', e);\n      this.treeview_id = e;\n    },\n\n    getPageList(item) {\n      console.log(item);\n\n      if (this.treeview_id.indexOf(item.id) != -1) {\n        this.page_list.push(item.id);\n      }\n\n      if (item.children.length() > 0) {\n        getPageList(item.children);\n      }\n    },\n\n    onClickOk() {\n      this.showModal = false;\n      this.showTreeviewModal = true;\n      this.rows = this.allrows[this.selectedItem];\n      this.book_uuid = this.uuid_rows[this.selectedItem];\n      this.book_title = this.title_rows[this.selectedItem];\n    },\n\n    getImgUrl() {\n      var images = __webpack_require__(\"./src/assets/img sync \\\\.jpeg$\");\n\n      return images('./' + this.imgURL);\n    },\n\n    getAnswerUrl() {\n      var images = __webpack_require__(\"./src/assets/img sync \\\\.jpeg$\");\n\n      return images('./' + this.imgAnswerURL);\n    },\n\n    onTreeviewOk() {\n      this.showTreeviewModal = false;\n      console.log(\"ssssssssssss\" + this.treeview_id);\n\n      for (var i = 0; i < this.rows.length; i++) {\n        if (this.rows[i].children.length > 0) {\n          for (var k = 0; k < this.rows[i].children.length; k++) {\n            this.getPageList(this.rows[i].children[k]);\n          }\n        }\n\n        if (this.treeview_id.indexOf(this.row[0].id) != -1) {\n          this.page_list.push(this.row[0].id);\n        }\n      }\n\n      this.axios.get(\"https://jsonplaceholder.typicode.com/todos/1\").then(response => {\n        this.$swal({\n          title: \"Success\",\n          text: \"Your Subject was selected successfully\",\n          icon: \"success\",\n          confirmButtonText: \"Done\"\n        });\n      }).catch(error => {\n        this.$swal({\n          title: \"Oops, Something went wrong ! \",\n          text: error.message,\n          icon: \"warning\"\n        });\n      });\n    },\n\n    onSettingsOk() {\n      //fake post request\n      this.showSettingsModal = false;\n      var temp = this.setting_form[0];\n      temp.data.reward.point = this.points_value;\n      temp.data.plan.monday = this.mon;\n      temp.data.plan.tuesday = this.tue;\n      temp.data.plan.wednesday = this.wen;\n      temp.data.plan.thursday = this.thu;\n      temp.data.plan.friday = this.fri;\n      temp.data.plan.saturday = this.sat;\n      temp.data.plan.sunday = this.sun;\n      temp.data.period.difficult_unit = this.difficult_value_combo;\n      temp.data.period.miss_unit = this.mistake_value_combo;\n      temp.data.period.easy_unit = this.easy_value_combo;\n      temp.data.period.standard_unit = this.not_difficult_value_combo;\n      temp.data.period.standard_num = this.not_difficult_value;\n      temp.data.period.easy_num = this.easy_value;\n      temp.data.period.miss_num = this.mistake_value;\n      temp.data.period.difficult_num = this.difficult_value;\n      temp.data.plan.start = this.date;\n      console.log(temp);\n      this.axios.put(\"http://localhost:8000/api/setting/\" + this.setting_id + \"/\", temp).then(response => {\n        this.$swal({\n          title: \"Updated\",\n          text: \"The Setting was updated successfully\",\n          icon: \"success\",\n          confirmButtonText: \"Done\"\n        });\n      }).catch(error => {\n        this.$swal({\n          title: \"Oops, Something went wrong ! \",\n          text: error.message,\n          icon: \"warning\"\n        });\n      });\n    },\n\n    backToPreviousPage() {\n      this.$router.back();\n    },\n\n    updateInfo() {\n      //fake post request\n      this.axios.get(\"https://jsonplaceholder.typicode.com/todos/1\").then(response => {\n        this.$swal({\n          title: \"Updated\",\n          text: \"Your profile was updated successfully\",\n          icon: \"success\",\n          confirmButtonText: \"Done\"\n        });\n      }).catch(error => {\n        this.$swal({\n          title: \"Oops, Something went wrong ! \",\n          text: error.message,\n          icon: \"warning\"\n        });\n      });\n    }\n\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./src/views/profile.vue?vue&type=script&lang=js&\n");

/***/ })

})